package ba.unsa.etf.si.TelefonskeNarudzbe.UserInterface;

import ba.unsa.etf.si.TelefonskeNarudzbe.UserInterface.TelefonPocetnaGUI;
import ba.unsa.etf.si.TelefonskeNarudzbe.Controllers.*;
import ba.unsa.etf.si.TelefonskeNarudzbe.DomainModels.*;
import ba.unsa.etf.si.TelefonskeNarudzbe.*;
import Util.HibernateUtil;

import java.awt.EventQueue;
import java.awt.ItemSelectable;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JTextPane;
import javax.swing.ScrollPaneConstants;
import javax.swing.border.LineBorder;
import javax.swing.text.MaskFormatter;

import org.apache.log4j.Logger;

import java.awt.Color;
import java.awt.Dimension;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JTextField;
import java.awt.event.*;
import java.util.Iterator;
import java.text.ParseException;
import java.time.LocalDateTime;

import javax.swing.SwingConstants;
import javax.swing.AbstractListModel;
import javax.swing.DefaultListModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

import java.util.Date;
import java.util.Set;
import java.util.regex.Pattern;

import javax.swing.JTextArea;

public class NovaNarudzbaGUI {
	private JFrame frmInformacijeONarudbi;
	private JTextField txtAdresa;
	private JFormattedTextField txtBrTelefona;
	private JTextField txtInformacije;
	private JTextField txtCijena;
	private JTextField txtPopust;
	private JTextField txtUkupno;
	private JTextField txtKolicina;
	private JTextPane txtDodatneInformacije;
	private JScrollPane listScrollPane;
	private JComboBox comboBox;
	private DefaultListModel lmodel;
	private DefaultComboBoxModel cbmodel;

	private NovaNarudzbaController kontroler;
	private List<Jelo> narucenaJela;
	private JButton btnObraunaj;
	private JButton btnNewButton;
	private static Zaposlenik ja;
	private TelefonPocetnaGUI tel = new TelefonPocetnaGUI();
	private List<NarudzbaJeloVeza> njvLista;
	private MaskFormatter telefon;
	final static Logger logger = Logger.getLogger(NovaNarudzbaGUI.class);
	private static final boolean ProvjeriDaLiJeSveUpisano = false;

	// otvara novi prozor

	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					NovaNarudzbaGUI window = new NovaNarudzbaGUI();
					window.frmInformacijeONarudbi.setVisible(true);
				} catch (Exception e) {
					logger.info(e);
					// e.printStackTrace();
				}
			}
		});
	}
	public JFrame dajOkvir(){
		return frmInformacijeONarudbi;
	}
	
	public NovaNarudzbaGUI() {

		lmodel = new DefaultListModel();
		cbmodel = new DefaultComboBoxModel();
		kontroler = new NovaNarudzbaController();
		narucenaJela = new ArrayList<Jelo>();
		btnObraunaj = new JButton("Obra\u010Dunaj ");
		btnNewButton = new JButton("Spremi ");
		njvLista = new ArrayList<NarudzbaJeloVeza>();

		initialize();

	}

	public NovaNarudzbaGUI(Zaposlenik zap) {
		ja = zap;
		lmodel = new DefaultListModel();
		cbmodel = new DefaultComboBoxModel();
		kontroler = new NovaNarudzbaController();
		narucenaJela = new ArrayList<Jelo>();
		btnObraunaj = new JButton("Obra\u010Dunaj ");
		btnNewButton = new JButton("Spremi ");
		njvLista = new ArrayList<NarudzbaJeloVeza>();

		initialize();
		frmInformacijeONarudbi.setVisible(true);

	}

	private void OdjaviSe() throws Exception {
		try {

			frmInformacijeONarudbi.setVisible(false);
			LoginGUI log = new LoginGUI();
			// tel.Ugasi();

		} catch (Exception e) {
			logger.info(e);
			throw new Exception();
		}
	}

	// funkcija za prikaz svih jela u comboboxu iz baze
	private void prikaziJela() {

		try {
			List<Jelo> jela = kontroler.dajSvaJela();

			for (Jelo i : jela) {
				cbmodel.addElement(i.getNaziv());
			}
		}

		catch (Exception e) {
			JOptionPane.showMessageDialog(null, e.getMessage());
			logger.info(e);
		}
	}

	// funkcija za dinamicko dodavanje u listu narucenih jela
	private void dodajUListu(String naziv) {
		try {
			Jelo j = kontroler.dajJelo(naziv);
			NarudzbaJeloVeza vezaNJ = new NarudzbaJeloVeza();
			Integer kolicinaJela = Integer.parseInt(txtKolicina.getText());
if(kolicinaJela<=0) throw new Exception("Količina mora biti pozitivna!");
			for (int i = 0; i < kolicinaJela; i++) {
				lmodel.addElement(j.getNaziv());
				narucenaJela.add(j);
			}

			NarudzbaJeloVeza njv = new NarudzbaJeloVeza();
			njv.setJelo(j);
			njv.setKolicina(kolicinaJela);

			njvLista.add(njv);
		}

		catch (Exception e) {
			if(e.getMessage().equals("Količina mora biti pozitivna!")) JOptionPane.showMessageDialog(null, "Količina mora biti pozitivna!");
			else	{	JOptionPane.showMessageDialog(null, "Molimo odaberite jelo i unesite ispravno količinu");
			System.out.println(e.getCause().toString());}
			logger.info(e);
		}

	}

	private void refreshajDodavanje() {
		comboBox.setSelectedIndex(-1);
		txtKolicina.setText("");
	}

	private void refreshajProzor() {
		comboBox.setSelectedIndex(-1);
		txtKolicina.setText("");

		txtAdresa.setText("");
		txtBrTelefona.setText("   /   -   ");
		txtInformacije.setText("");
		txtCijena.setText("");
		txtPopust.setText("");
		txtUkupno.setText("");
		txtKolicina.setText("");
		txtDodatneInformacije.setText("");

		lmodel.clear();
		narucenaJela.clear();
		njvLista.clear();

		btnNewButton.setEnabled(false);

	}

	// racuna cijenu sa popustom povucenim iz baze i upisuje u textbox
	private void obracunajCijenu() {
		double cijenaBezPopusta = 0;
		double popust;
		double ukupnaCijena = 0;
if(!ProvjeriDaLiJeSveUpisano) {JOptionPane.showMessageDialog(null, "Popunite sva polja"); return ;}
		try {
			for (Jelo j : narucenaJela) {
				cijenaBezPopusta += j.getCijena();
			}

			Popust p = kontroler.dajPopust(cijenaBezPopusta);

			if (p != null)
				popust = p.getIznos();

			else
				popust = 0;

			ukupnaCijena = cijenaBezPopusta - cijenaBezPopusta * popust / 100;

			txtCijena.setText(Double.toString(cijenaBezPopusta));
			txtPopust.setText(Double.toString(popust) + "%");
			txtUkupno.setText(Double.toString(ukupnaCijena));
		}

		catch (Exception e) {
			JOptionPane.showMessageDialog(null, e.getMessage());
			logger.info(e);
		}

	}

	// provjerava da li je uneseno sve sto je potrebno za narudzbu
	private Boolean provjeriJelSveUpisano() {
		if (txtCijena.getText().equals("") || txtPopust.getText().equals("") || txtUkupno.getText().equals("")
				|| txtAdresa.getText().equals("") || txtBrTelefona.getText().equals("") || narucenaJela.isEmpty()) {
			return false;
		}

		return true;
	}

	// sprema narudzbu u bazu sa svim vezama
	private Boolean pospremiUBazu() {

		try {
			Kupac k = new Kupac();
			Narudzba nova = new Narudzba();
			k.setAdresa(txtAdresa.getText());
			k.setInfo(txtInformacije.getText());
			String broj = txtBrTelefona.getText();
			int brojUIntu;
			String[] parts = broj.split(Pattern.quote("-"));
			brojUIntu = Integer.parseInt(parts[0]) * 1000000 + Integer.parseInt(parts[1]) * 1000
					+ Integer.parseInt(parts[2]);
			k.setBrojTelefona(brojUIntu);

			nova.setZaposlenikByZaposlenikOsobaIdPrimalac(ja);
			nova.setCijena(Double.parseDouble(txtUkupno.getText()));
			nova.setStatus(1);
			nova.setVrijemePrijema(new Date(System.currentTimeMillis()));
			nova.setOpis(txtDodatneInformacije.getText());

			kontroler.spremiNovogKupca(k);
			nova.setKupac(k);
			kontroler.spremiNovuNarudzbu(nova);

			for (NarudzbaJeloVeza i : njvLista) {
				i.setNarudzba(nova);
				kontroler.spremiNarudzbaJeloVeza(i);
			}

			return true;

		}

		catch (Exception e) {
			JOptionPane.showMessageDialog(null, e.getMessage());
			logger.info(e);
			return false;
		}

	}

	private void initialize() {

		prikaziJela();

		telefon = new MaskFormatter();
		try {
			telefon = new MaskFormatter("###-###-###");
			telefon.setPlaceholderCharacter(' ');
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		frmInformacijeONarudbi = new JFrame();
		frmInformacijeONarudbi.setTitle("Informacije o narud\u017Ebi");
		frmInformacijeONarudbi.setBounds(100, 100, 461, 478);
		frmInformacijeONarudbi.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		frmInformacijeONarudbi.getContentPane().setLayout(null);

		JPanel panel = new JPanel();
		panel.setBounds(10, 34, 423, 30);
		frmInformacijeONarudbi.getContentPane().add(panel);
		panel.setLayout(null);
		JList list = new JList(lmodel);
		list.setBorder(new LineBorder(new Color(0, 0, 0)));
		list.setBounds(10, 100, 204, 89);
		frmInformacijeONarudbi.getContentPane().add(list);
		JLabel lblPretragaJela = new JLabel("Jelo:");
		lblPretragaJela.setBounds(10, 0, 32, 27);
		panel.add(lblPretragaJela);

		comboBox = new JComboBox(cbmodel);
		comboBox.setSelectedIndex(-1);
		comboBox.setEditable(false);
		comboBox.setBounds(52, 3, 145, 20);
		panel.add(comboBox);

		JButton btnDodajJelo = new JButton("Dodaj jelo");
		btnDodajJelo.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				dodajUListu((String) cbmodel.getSelectedItem());
				refreshajDodavanje();
			}
		});
		btnDodajJelo.setBounds(324, 2, 89, 23);
		panel.add(btnDodajJelo);

		JLabel lblKolicina = new JLabel("Količina:");
		lblKolicina.setBounds(207, 3, 51, 20);
		panel.add(lblKolicina);

		txtKolicina = new JTextField();
		txtKolicina.setBounds(271, 3, 39, 20);
		txtKolicina.setHorizontalAlignment(JTextField.CENTER);
		panel.add(txtKolicina);
		txtKolicina.setColumns(10);

		JScrollPane listScrollPane = new JScrollPane(list);
		listScrollPane.setBounds(10, 100, 204, 89);
		frmInformacijeONarudbi.getContentPane().add(listScrollPane);

		JLabel lblDodatniOpis = new JLabel("Dodatni opis narud\u017Ebe:");
		lblDodatniOpis.setBounds(246, 75, 159, 14);
		frmInformacijeONarudbi.getContentPane().add(lblDodatniOpis);

		txtDodatneInformacije = new JTextPane();
		txtDodatneInformacije.setBounds(237, 100, 184, 89);
		frmInformacijeONarudbi.getContentPane().add(txtDodatneInformacije);

		JLabel lblNaruenaJela = new JLabel("Naru\u010Dena jela:");
		lblNaruenaJela.setBounds(20, 75, 87, 14);
		frmInformacijeONarudbi.getContentPane().add(lblNaruenaJela);

		JPanel panel_1 = new JPanel();
		panel_1.setToolTipText("Podaci o naru\u010Diocu");
		panel_1.setBounds(10, 210, 423, 119);
		frmInformacijeONarudbi.getContentPane().add(panel_1);
		panel_1.setLayout(null);

		JLabel lblNewLabel = new JLabel("Adresa:");
		lblNewLabel.setBounds(59, 30, 46, 14);
		panel_1.add(lblNewLabel);

		JLabel lblPodaciOKorisniku = new JLabel("Podaci o naru\u010Diocu");
		lblPodaciOKorisniku.setBounds(165, 0, 114, 14);
		panel_1.add(lblPodaciOKorisniku);

		txtAdresa = new JTextField();
		txtAdresa.setBounds(109, 27, 304, 20);
		panel_1.add(txtAdresa);
		txtAdresa.setColumns(10);

		JLabel lblNewLabel_1 = new JLabel("Broj telefona:");
		lblNewLabel_1.setBounds(30, 55, 89, 14);
		panel_1.add(lblNewLabel_1);

		txtBrTelefona = new JFormattedTextField(telefon);
		txtBrTelefona.setColumns(12);
		txtBrTelefona.setBounds(109, 52, 304, 20);
		panel_1.add(txtBrTelefona);

		JLabel lblNewLabel_2 = new JLabel("Informacije:");
		lblNewLabel_2.setBounds(38, 81, 114, 14);
		panel_1.add(lblNewLabel_2);

		txtInformacije = new JTextField();
		txtInformacije.setColumns(10);
		txtInformacije.setBounds(109, 78, 304, 20);
		panel_1.add(txtInformacije);

		JPanel panel_2 = new JPanel();
		panel_2.setBounds(237, 339, 184, 90);
		frmInformacijeONarudbi.getContentPane().add(panel_2);
		panel_2.setLayout(null);

		JLabel lblNewLabel_3 = new JLabel("Cijena:");
		lblNewLabel_3.setBounds(20, 11, 46, 14);
		panel_2.add(lblNewLabel_3);

		txtCijena = new JTextField();
		txtCijena.setEditable(false);
		txtCijena.setBounds(68, 8, 86, 20);
		panel_2.add(txtCijena);
		txtCijena.setColumns(10);

		JLabel lblPopust = new JLabel("Ukupno:");
		lblPopust.setBounds(20, 61, 46, 14);
		panel_2.add(lblPopust);

		JLabel label = new JLabel("Popust:");
		label.setBounds(20, 36, 46, 14);
		panel_2.add(label);

		txtPopust = new JTextField();
		txtPopust.setEditable(false);
		txtPopust.setColumns(10);
		txtPopust.setBounds(68, 33, 86, 20);
		panel_2.add(txtPopust);

		txtUkupno = new JTextField();
		txtUkupno.setEditable(false);
		txtUkupno.setColumns(10);
		txtUkupno.setBounds(68, 58, 86, 20);
		panel_2.add(txtUkupno);

		JLabel lblNewLabel_4 = new JLabel("KM");
		lblNewLabel_4.setBounds(160, 61, 24, 14);
		panel_2.add(lblNewLabel_4);

		JLabel label_1 = new JLabel("KM");
		label_1.setBounds(160, 11, 24, 14);
		panel_2.add(label_1);

		JLabel label_2 = new JLabel("%");
		label_2.setBounds(160, 36, 24, 14);
		panel_2.add(label_2);

		btnObraunaj.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				obracunajCijenu();
				if (provjeriJelSveUpisano())
					btnNewButton.setEnabled(true);
			}
		});
		btnObraunaj.setBounds(76, 357, 107, 23);
		frmInformacijeONarudbi.getContentPane().add(btnObraunaj);

		btnNewButton.setEnabled(false);
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if (pospremiUBazu()) {
					JOptionPane.showMessageDialog(null, "Nova narudzba je unesena.");
					refreshajProzor();
				}

				else
					JOptionPane.showMessageDialog(null, "Doslo je do greske.");
			}
		});
		btnNewButton.setVerticalAlignment(SwingConstants.BOTTOM);
		btnNewButton.setBounds(76, 389, 107, 23);
		frmInformacijeONarudbi.getContentPane().add(btnNewButton);
		btnObraunaj.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
			}
		});
	}
}